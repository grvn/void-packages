name: Build and Release Void Linux Packages

env:
  TAG: workflow-${{ github.run_number }}

on:
  push:
    branches:
      - main
    paths:
      - srcpkgs/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      max-parallel: 1
      matrix:
        arch: [x86_64, x86_64-musl]
    runs-on: ubuntu-latest
    env:
      XBPS_ALLOW_RESTRICTED: "yes"
      # XBPS_PASSPHRASE: ${{ secrets.SIGN_PASS }}
      XBPS_TARGET_ARCH: ${{ matrix.arch }}
      REPO_OWNER: "${{ github.repository_owner }}"
      REPO_NAME: "${{ github.event.repository.name }}"
      PATH: "/opt/xbps/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

    steps:
      - name: More free space
        run: |
          sudo rm --recursive --force /usr/local/lib/android /usr/share/dotnet /opt/ghc /usr/local/.ghcup /opt/hostedtoolcache/CodeQL

      - name: prepare xbps-static
        run: |
          mkdir -p /opt/xbps
          curl --fail -sL http://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz \
          | tar -xJf - -C /opt/xbps

      - name: checkout void-packages
        uses: actions/checkout@v4
        with:
          repository: void-linux/void-packages
          ref: master
          # path: void-packages

      - name: Merge this repository
        working-directory: ${{ github.workspace }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote add -f grvn https://github.com/grvn/void-packages.git
          git merge --no-commit --strategy-option=theirs --allow-unrelated-histories -Xignore-space-change grvn/main
          mkdir -p hostdir/binpkgs
          gh release download --pattern "*${{ matrix.arch }}*" --dir hostdir/binpkgs || true
          if [[ ${{ matrix.arch }} == x86_64 ]]; then
            rm --force hostdir/binpkgs/*x86_64-musl*
          fi

      - name: Identify changes to build
        working-directory: ${{ github.workspace }}
        run: |
          latest_name=$(gh release view --json tagName --jq '.tagName' || echo "Initial Commit")
          latest_sha=$(git rev-list --max-count=1 ${latest_name} 2>/dev/null || git rev-list --max-parents=0 grvn/main)
          echo "Latest Tag Name: ${latest_name}"
          echo "Latest Tag SHA: ${latest_sha}"

          git diff-tree -r --no-renames --name-only --diff-filter=AM ${latest_sha} ${{ github.sha }} -- 'srcpkgs/**' \
          | cut -d/ -f 2 | xargs ./xbps-src sort-dependencies | tee /tmp/templates

      - name: setup binary bootstrap
        working-directory: ${{ github.workspace }}
        run: |
          ./xbps-src -m masterdir-${{ matrix.arch }} -A ${{ matrix.arch }} binary-bootstrap

      # -------------------- Packages to build --------------------

      - name: build pkgs
        working-directory: ${{ github.workspace }}
        run: |
          pkgs=$(cat /tmp/templates)
          for pkg in ${pkgs}; do
            ./xbps-src pkg -j$(nproc) -m masterdir-${{ matrix.arch }} "${pkg}" || printf "Failed building ${pkg}!\n"
          done

      # -----------------------------------------------------------

      - name: Cleanup
        working-directory: ${{ github.workspace }}/hostdir/binpkgs
        run: |
          xbps-rindex --clean ${PWD}
          xbps-rindex --remove-obsoletes ${PWD}

      # - name: sign
      #   working-directory: ${{ github.workspace }}/hostdir/binpkgs
      #   run: |
      #     echo "${{ secrets.PRIV_KEY }}" > private.pem
      #     xbps-rindex --privkey private.pem --sign --signedby "${{ env.REPO_NAME }}-github-actions" ${PWD}
      #     xbps-rindex --privkey private.pem --sign-pkg *.xbps
      #     rm privkey.pem

      - name: checksum
        working-directory: ${{ github.workspace }}/hostdir/binpkgs
        run: |
          for file in *.xbps; do
            sha256sum "${file}" | cut -d ' ' -f 1 > "${file}.sha256sum"
            sha512sum "${file}" | cut -d ' ' -f 1 > "${file}.sha512sum"
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-repodata
          path: ${{ github.workspace }}/hostdir/binpkgs

      - name: short sha
        working-directory: ${{ github.workspace }}
        run: |
          printf "SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.SHORT_SHA }}
          tag_name: ${{ env.TAG }}
          files: |
            ${{ github.workspace }}/hostdir/binpkgs/*.xbps
            ${{ github.workspace }}/hostdir/binpkgs/*.sha256sum
            ${{ github.workspace }}/hostdir/binpkgs/*.sha512sum
            ${{ github.workspace }}/hostdir/binpkgs/*.sig2
            ${{ github.workspace }}/hostdir/binpkgs/*repodata
